#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReMoBi_DCSN.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="news1")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void Insertimage(image instance);
    partial void Updateimage(image instance);
    partial void Deleteimage(image instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertPost(Post instance);
    partial void UpdatePost(Post instance);
    partial void DeletePost(Post instance);
    partial void InsertPostImage(PostImage instance);
    partial void UpdatePostImage(PostImage instance);
    partial void DeletePostImage(PostImage instance);
    partial void Inserttag(tag instance);
    partial void Updatetag(tag instance);
    partial void Deletetag(tag instance);
    #endregion
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<image> images
		{
			get
			{
				return this.GetTable<image>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<Post> Posts
		{
			get
			{
				return this.GetTable<Post>();
			}
		}
		
		public System.Data.Linq.Table<PostImage> PostImages
		{
			get
			{
				return this.GetTable<PostImage>();
			}
		}
		
		public System.Data.Linq.Table<tag> tags
		{
			get
			{
				return this.GetTable<tag>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdminID;
		
		private string _username;
		
		private string _password;
		
		private string _hovaten;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<NguoiDung> _NguoiDung1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnhovatenChanging(string value);
    partial void OnhovatenChanged();
    #endregion
		
		public ADMIN()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._NguoiDung1 = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hovaten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string hovaten
		{
			get
			{
				return this._hovaten;
			}
			set
			{
				if ((this._hovaten != value))
				{
					if (this._NguoiDung1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhovatenChanging(value);
					this.SendPropertyChanging();
					this._hovaten = value;
					this.SendPropertyChanged("hovaten");
					this.OnhovatenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_ADMIN", Storage="_NguoiDung", ThisKey="AdminID", OtherKey="UserID", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.ADMIN = null;
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.ADMIN = this;
						this._AdminID = value.UserID;
					}
					else
					{
						this._AdminID = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_ADMIN1", Storage="_NguoiDung1", ThisKey="hovaten", OtherKey="hovaten", IsForeignKey=true)]
		public NguoiDung NguoiDung1
		{
			get
			{
				return this._NguoiDung1.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung1.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung1.Entity = null;
						previousValue.ADMINs.Remove(this);
					}
					this._NguoiDung1.Entity = value;
					if ((value != null))
					{
						value.ADMINs.Add(this);
						this._hovaten = value.hovaten;
					}
					else
					{
						this._hovaten = default(string);
					}
					this.SendPropertyChanged("NguoiDung1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.images")]
	public partial class image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _imagesID;
		
		private string _Name_file_images;
		
		private string _Caption_images;
		
		private System.Nullable<int> _PostID;
		
		private EntityRef<PostImage> _PostImage;
		
		private EntityRef<Post> _Post;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnimagesIDChanging(int value);
    partial void OnimagesIDChanged();
    partial void OnName_file_imagesChanging(string value);
    partial void OnName_file_imagesChanged();
    partial void OnCaption_imagesChanging(string value);
    partial void OnCaption_imagesChanged();
    partial void OnPostIDChanging(System.Nullable<int> value);
    partial void OnPostIDChanged();
    #endregion
		
		public image()
		{
			this._PostImage = default(EntityRef<PostImage>);
			this._Post = default(EntityRef<Post>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagesID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int imagesID
		{
			get
			{
				return this._imagesID;
			}
			set
			{
				if ((this._imagesID != value))
				{
					this.OnimagesIDChanging(value);
					this.SendPropertyChanging();
					this._imagesID = value;
					this.SendPropertyChanged("imagesID");
					this.OnimagesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_file_images", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name_file_images
		{
			get
			{
				return this._Name_file_images;
			}
			set
			{
				if ((this._Name_file_images != value))
				{
					this.OnName_file_imagesChanging(value);
					this.SendPropertyChanging();
					this._Name_file_images = value;
					this.SendPropertyChanged("Name_file_images");
					this.OnName_file_imagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption_images", DbType="NVarChar(MAX)")]
		public string Caption_images
		{
			get
			{
				return this._Caption_images;
			}
			set
			{
				if ((this._Caption_images != value))
				{
					this.OnCaption_imagesChanging(value);
					this.SendPropertyChanging();
					this._Caption_images = value;
					this.SendPropertyChanged("Caption_images");
					this.OnCaption_imagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", DbType="Int")]
		public System.Nullable<int> PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="image_PostImage", Storage="_PostImage", ThisKey="imagesID", OtherKey="ImageID", IsUnique=true, IsForeignKey=false)]
		public PostImage PostImage
		{
			get
			{
				return this._PostImage.Entity;
			}
			set
			{
				PostImage previousValue = this._PostImage.Entity;
				if (((previousValue != value) 
							|| (this._PostImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostImage.Entity = null;
						previousValue.image = null;
					}
					this._PostImage.Entity = value;
					if ((value != null))
					{
						value.image = this;
					}
					this.SendPropertyChanged("PostImage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_image", Storage="_Post", ThisKey="PostID", OtherKey="PostID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.images.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.images.Add(this);
						this._PostID = value.PostID;
					}
					else
					{
						this._PostID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KhID;
		
		private string _username;
		
		private string _password;
		
		private string _hovaten;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKhIDChanging(int value);
    partial void OnKhIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnhovatenChanging(string value);
    partial void OnhovatenChanged();
    #endregion
		
		public KhachHang()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KhID
		{
			get
			{
				return this._KhID;
			}
			set
			{
				if ((this._KhID != value))
				{
					this.OnKhIDChanging(value);
					this.SendPropertyChanging();
					this._KhID = value;
					this.SendPropertyChanged("KhID");
					this.OnKhIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hovaten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string hovaten
		{
			get
			{
				return this._hovaten;
			}
			set
			{
				if ((this._hovaten != value))
				{
					this.OnhovatenChanging(value);
					this.SendPropertyChanging();
					this._hovaten = value;
					this.SendPropertyChanged("hovaten");
					this.OnhovatenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _vaitro;
		
		private string _hovaten;
		
		private EntityRef<ADMIN> _ADMIN;
		
		private EntitySet<ADMIN> _ADMINs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnvaitroChanging(string value);
    partial void OnvaitroChanged();
    partial void OnhovatenChanging(string value);
    partial void OnhovatenChanged();
    #endregion
		
		public NguoiDung()
		{
			this._ADMIN = default(EntityRef<ADMIN>);
			this._ADMINs = new EntitySet<ADMIN>(new Action<ADMIN>(this.attach_ADMINs), new Action<ADMIN>(this.detach_ADMINs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vaitro", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string vaitro
		{
			get
			{
				return this._vaitro;
			}
			set
			{
				if ((this._vaitro != value))
				{
					this.OnvaitroChanging(value);
					this.SendPropertyChanging();
					this._vaitro = value;
					this.SendPropertyChanged("vaitro");
					this.OnvaitroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hovaten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string hovaten
		{
			get
			{
				return this._hovaten;
			}
			set
			{
				if ((this._hovaten != value))
				{
					this.OnhovatenChanging(value);
					this.SendPropertyChanging();
					this._hovaten = value;
					this.SendPropertyChanged("hovaten");
					this.OnhovatenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_ADMIN", Storage="_ADMIN", ThisKey="UserID", OtherKey="AdminID", IsUnique=true, IsForeignKey=false)]
		public ADMIN ADMIN
		{
			get
			{
				return this._ADMIN.Entity;
			}
			set
			{
				ADMIN previousValue = this._ADMIN.Entity;
				if (((previousValue != value) 
							|| (this._ADMIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADMIN.Entity = null;
						previousValue.NguoiDung = null;
					}
					this._ADMIN.Entity = value;
					if ((value != null))
					{
						value.NguoiDung = this;
					}
					this.SendPropertyChanged("ADMIN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_ADMIN1", Storage="_ADMINs", ThisKey="hovaten", OtherKey="hovaten")]
		public EntitySet<ADMIN> ADMINs
		{
			get
			{
				return this._ADMINs;
			}
			set
			{
				this._ADMINs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADMINs(ADMIN entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung1 = this;
		}
		
		private void detach_ADMINs(ADMIN entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Post")]
	public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PostID;
		
		private string _Post_Title;
		
		private string _Author;
		
		private System.Nullable<System.DateTime> _Post_Date;
		
		private string _Teaser_Post;
		
		private string _Content_Post;
		
		private System.Nullable<int> _TagID;
		
		private string _AnhBia;
		
		private System.Nullable<int> _luotthich;
		
		private EntitySet<image> _images;
		
		private EntitySet<PostImage> _PostImages;
		
		private EntityRef<tag> _tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostIDChanging(int value);
    partial void OnPostIDChanged();
    partial void OnPost_TitleChanging(string value);
    partial void OnPost_TitleChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnPost_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnPost_DateChanged();
    partial void OnTeaser_PostChanging(string value);
    partial void OnTeaser_PostChanged();
    partial void OnContent_PostChanging(string value);
    partial void OnContent_PostChanged();
    partial void OnTagIDChanging(System.Nullable<int> value);
    partial void OnTagIDChanged();
    partial void OnAnhBiaChanging(string value);
    partial void OnAnhBiaChanged();
    partial void OnluotthichChanging(System.Nullable<int> value);
    partial void OnluotthichChanged();
    #endregion
		
		public Post()
		{
			this._images = new EntitySet<image>(new Action<image>(this.attach_images), new Action<image>(this.detach_images));
			this._PostImages = new EntitySet<PostImage>(new Action<PostImage>(this.attach_PostImages), new Action<PostImage>(this.detach_PostImages));
			this._tag = default(EntityRef<tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_Title", DbType="NVarChar(MAX)")]
		public string Post_Title
		{
			get
			{
				return this._Post_Title;
			}
			set
			{
				if ((this._Post_Title != value))
				{
					this.OnPost_TitleChanging(value);
					this.SendPropertyChanging();
					this._Post_Title = value;
					this.SendPropertyChanged("Post_Title");
					this.OnPost_TitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(50)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Post_Date
		{
			get
			{
				return this._Post_Date;
			}
			set
			{
				if ((this._Post_Date != value))
				{
					this.OnPost_DateChanging(value);
					this.SendPropertyChanging();
					this._Post_Date = value;
					this.SendPropertyChanged("Post_Date");
					this.OnPost_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teaser_Post", DbType="NVarChar(MAX)")]
		public string Teaser_Post
		{
			get
			{
				return this._Teaser_Post;
			}
			set
			{
				if ((this._Teaser_Post != value))
				{
					this.OnTeaser_PostChanging(value);
					this.SendPropertyChanging();
					this._Teaser_Post = value;
					this.SendPropertyChanged("Teaser_Post");
					this.OnTeaser_PostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content_Post", DbType="NVarChar(MAX)")]
		public string Content_Post
		{
			get
			{
				return this._Content_Post;
			}
			set
			{
				if ((this._Content_Post != value))
				{
					this.OnContent_PostChanging(value);
					this.SendPropertyChanging();
					this._Content_Post = value;
					this.SendPropertyChanged("Content_Post");
					this.OnContent_PostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="Int")]
		public System.Nullable<int> TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					if (this._tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBia", DbType="NVarChar(MAX)")]
		public string AnhBia
		{
			get
			{
				return this._AnhBia;
			}
			set
			{
				if ((this._AnhBia != value))
				{
					this.OnAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._AnhBia = value;
					this.SendPropertyChanged("AnhBia");
					this.OnAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luotthich", DbType="Int")]
		public System.Nullable<int> luotthich
		{
			get
			{
				return this._luotthich;
			}
			set
			{
				if ((this._luotthich != value))
				{
					this.OnluotthichChanging(value);
					this.SendPropertyChanging();
					this._luotthich = value;
					this.SendPropertyChanged("luotthich");
					this.OnluotthichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_image", Storage="_images", ThisKey="PostID", OtherKey="PostID")]
		public EntitySet<image> images
		{
			get
			{
				return this._images;
			}
			set
			{
				this._images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PostImage", Storage="_PostImages", ThisKey="PostID", OtherKey="PostID")]
		public EntitySet<PostImage> PostImages
		{
			get
			{
				return this._PostImages;
			}
			set
			{
				this._PostImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tag_Post", Storage="_tag", ThisKey="TagID", OtherKey="TagID", IsForeignKey=true)]
		public tag tag
		{
			get
			{
				return this._tag.Entity;
			}
			set
			{
				tag previousValue = this._tag.Entity;
				if (((previousValue != value) 
							|| (this._tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tag.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._tag.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._TagID = value.TagID;
					}
					else
					{
						this._TagID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_images(image entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_images(image entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_PostImages(PostImage entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_PostImages(PostImage entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostImages")]
	public partial class PostImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PostID;
		
		private int _ImageID;
		
		private EntityRef<image> _image;
		
		private EntityRef<Post> _Post;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostIDChanging(int value);
    partial void OnPostIDChanged();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    #endregion
		
		public PostImage()
		{
			this._image = default(EntityRef<image>);
			this._Post = default(EntityRef<Post>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", DbType="Int NOT NULL")]
		public int PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					if (this._image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="image_PostImage", Storage="_image", ThisKey="ImageID", OtherKey="imagesID", IsForeignKey=true)]
		public image image
		{
			get
			{
				return this._image.Entity;
			}
			set
			{
				image previousValue = this._image.Entity;
				if (((previousValue != value) 
							|| (this._image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._image.Entity = null;
						previousValue.PostImage = null;
					}
					this._image.Entity = value;
					if ((value != null))
					{
						value.PostImage = this;
						this._ImageID = value.imagesID;
					}
					else
					{
						this._ImageID = default(int);
					}
					this.SendPropertyChanged("image");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PostImage", Storage="_Post", ThisKey="PostID", OtherKey="PostID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.PostImages.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.PostImages.Add(this);
						this._PostID = value.PostID;
					}
					else
					{
						this._PostID = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tags")]
	public partial class tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TagID;
		
		private string _Name_Tags;
		
		private EntitySet<Post> _Posts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagIDChanging(int value);
    partial void OnTagIDChanged();
    partial void OnName_TagsChanging(string value);
    partial void OnName_TagsChanged();
    #endregion
		
		public tag()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Tags", DbType="NVarChar(50)")]
		public string Name_Tags
		{
			get
			{
				return this._Name_Tags;
			}
			set
			{
				if ((this._Name_Tags != value))
				{
					this.OnName_TagsChanging(value);
					this.SendPropertyChanging();
					this._Name_Tags = value;
					this.SendPropertyChanged("Name_Tags");
					this.OnName_TagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tag_Post", Storage="_Posts", ThisKey="TagID", OtherKey="TagID")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.tag = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.tag = null;
		}
	}
}
#pragma warning restore 1591
