#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReMoBi_DCSN.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="news1")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void Insertbaiviet(baiviet instance);
    partial void Updatebaiviet(baiviet instance);
    partial void Deletebaiviet(baiviet instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    #endregion
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<baiviet> baiviets
		{
			get
			{
				return this.GetTable<baiviet>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdminID;
		
		private string _username;
		
		private string _password;
		
		private string _vaitro;
		
		private string _hovaten;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnvaitroChanging(string value);
    partial void OnvaitroChanged();
    partial void OnhovatenChanging(string value);
    partial void OnhovatenChanged();
    #endregion
		
		public ADMIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vaitro", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string vaitro
		{
			get
			{
				return this._vaitro;
			}
			set
			{
				if ((this._vaitro != value))
				{
					this.OnvaitroChanging(value);
					this.SendPropertyChanging();
					this._vaitro = value;
					this.SendPropertyChanged("vaitro");
					this.OnvaitroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hovaten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string hovaten
		{
			get
			{
				return this._hovaten;
			}
			set
			{
				if ((this._hovaten != value))
				{
					this.OnhovatenChanging(value);
					this.SendPropertyChanging();
					this._hovaten = value;
					this.SendPropertyChanged("hovaten");
					this.OnhovatenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.baiviet")]
	public partial class baiviet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenbaiviet;
		
		private string _tentacgia;
		
		private System.DateTime _ngaydang;
		
		private System.Nullable<int> _luotthich;
		
		private string _linkbaiviet;
		
		private string _linkfolderhinhanh;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenbaivietChanging(string value);
    partial void OntenbaivietChanged();
    partial void OntentacgiaChanging(string value);
    partial void OntentacgiaChanged();
    partial void OnngaydangChanging(System.DateTime value);
    partial void OnngaydangChanged();
    partial void OnluotthichChanging(System.Nullable<int> value);
    partial void OnluotthichChanged();
    partial void OnlinkbaivietChanging(string value);
    partial void OnlinkbaivietChanged();
    partial void OnlinkfolderhinhanhChanging(string value);
    partial void OnlinkfolderhinhanhChanged();
    #endregion
		
		public baiviet()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenbaiviet", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string tenbaiviet
		{
			get
			{
				return this._tenbaiviet;
			}
			set
			{
				if ((this._tenbaiviet != value))
				{
					this.OntenbaivietChanging(value);
					this.SendPropertyChanging();
					this._tenbaiviet = value;
					this.SendPropertyChanged("tenbaiviet");
					this.OntenbaivietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tentacgia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tentacgia
		{
			get
			{
				return this._tentacgia;
			}
			set
			{
				if ((this._tentacgia != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntentacgiaChanging(value);
					this.SendPropertyChanging();
					this._tentacgia = value;
					this.SendPropertyChanged("tentacgia");
					this.OntentacgiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaydang", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ngaydang
		{
			get
			{
				return this._ngaydang;
			}
			set
			{
				if ((this._ngaydang != value))
				{
					this.OnngaydangChanging(value);
					this.SendPropertyChanging();
					this._ngaydang = value;
					this.SendPropertyChanged("ngaydang");
					this.OnngaydangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luotthich", DbType="Int")]
		public System.Nullable<int> luotthich
		{
			get
			{
				return this._luotthich;
			}
			set
			{
				if ((this._luotthich != value))
				{
					this.OnluotthichChanging(value);
					this.SendPropertyChanging();
					this._luotthich = value;
					this.SendPropertyChanged("luotthich");
					this.OnluotthichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkbaiviet", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string linkbaiviet
		{
			get
			{
				return this._linkbaiviet;
			}
			set
			{
				if ((this._linkbaiviet != value))
				{
					this.OnlinkbaivietChanging(value);
					this.SendPropertyChanging();
					this._linkbaiviet = value;
					this.SendPropertyChanged("linkbaiviet");
					this.OnlinkbaivietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkfolderhinhanh", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string linkfolderhinhanh
		{
			get
			{
				return this._linkfolderhinhanh;
			}
			set
			{
				if ((this._linkfolderhinhanh != value))
				{
					this.OnlinkfolderhinhanhChanging(value);
					this.SendPropertyChanging();
					this._linkfolderhinhanh = value;
					this.SendPropertyChanged("linkfolderhinhanh");
					this.OnlinkfolderhinhanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_baiviet", Storage="_NguoiDung", ThisKey="tentacgia", OtherKey="hovaten", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.baiviets.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.baiviets.Add(this);
						this._tentacgia = value.hovaten;
					}
					else
					{
						this._tentacgia = default(string);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private string _vaitro;
		
		private string _hovaten;
		
		private EntitySet<baiviet> _baiviets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnvaitroChanging(string value);
    partial void OnvaitroChanged();
    partial void OnhovatenChanging(string value);
    partial void OnhovatenChanged();
    #endregion
		
		public NguoiDung()
		{
			this._baiviets = new EntitySet<baiviet>(new Action<baiviet>(this.attach_baiviets), new Action<baiviet>(this.detach_baiviets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vaitro", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string vaitro
		{
			get
			{
				return this._vaitro;
			}
			set
			{
				if ((this._vaitro != value))
				{
					this.OnvaitroChanging(value);
					this.SendPropertyChanging();
					this._vaitro = value;
					this.SendPropertyChanged("vaitro");
					this.OnvaitroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hovaten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string hovaten
		{
			get
			{
				return this._hovaten;
			}
			set
			{
				if ((this._hovaten != value))
				{
					this.OnhovatenChanging(value);
					this.SendPropertyChanging();
					this._hovaten = value;
					this.SendPropertyChanged("hovaten");
					this.OnhovatenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_baiviet", Storage="_baiviets", ThisKey="hovaten", OtherKey="tentacgia")]
		public EntitySet<baiviet> baiviets
		{
			get
			{
				return this._baiviets;
			}
			set
			{
				this._baiviets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_baiviets(baiviet entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_baiviets(baiviet entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
		private string _hovaten;
		
		private int _CustomerID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnhovatenChanging(string value);
    partial void OnhovatenChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    #endregion
		
		public KhachHang()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hovaten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string hovaten
		{
			get
			{
				return this._hovaten;
			}
			set
			{
				if ((this._hovaten != value))
				{
					this.OnhovatenChanging(value);
					this.SendPropertyChanging();
					this._hovaten = value;
					this.SendPropertyChanged("hovaten");
					this.OnhovatenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
